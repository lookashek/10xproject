name: Pull Request CI

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened

jobs:
  # Job 1: Linting
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  # Job 2: Testy jednostkowe
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Generate test coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  # Job 3: Testy E2E
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    env:
      # Zmienne ≈õrodowiskowe dla Supabase
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
      # Dane testowego u≈ºytkownika
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      # Dodatkowe zmienne dla Astro/Node
      NODE_ENV: test
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npm run e2e:install

      - name: Debug - Sprawd≈∫ zmienne ≈õrodowiskowe
        run: |
          echo "üîç Sprawdzanie zmiennych ≈õrodowiskowych dla Supabase..."
          echo "PUBLIC_SUPABASE_URL jest ustawiony: ${{ secrets.PUBLIC_SUPABASE_URL != '' }}"
          echo "PUBLIC_SUPABASE_KEY jest ustawiony: ${{ secrets.PUBLIC_SUPABASE_KEY != '' }}"
          echo "E2E_USERNAME jest ustawiony: ${{ secrets.E2E_USERNAME != '' }}"
          echo "E2E_PASSWORD jest ustawiony: ${{ secrets.E2E_PASSWORD != '' }}"
          echo ""
          echo "üìã D≈Çugo≈õci zmiennych (dla weryfikacji):"
          echo "PUBLIC_SUPABASE_URL length: ${#PUBLIC_SUPABASE_URL}"
          echo "PUBLIC_SUPABASE_KEY length: ${#PUBLIC_SUPABASE_KEY}"
          echo "E2E_USERNAME length: ${#E2E_USERNAME}"
          echo "E2E_PASSWORD length: ${#E2E_PASSWORD}"
          echo ""
          echo "üîó PUBLIC_SUPABASE_URL (pierwsze 20 znak√≥w): ${PUBLIC_SUPABASE_URL:0:20}..."
          echo "‚úÖ Zmienne zosta≈Çy przekazane do ≈õrodowiska!"

      - name: Run E2E tests
        run: npm run e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

  # Job 4: Build verification
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # Job 5: Quality Gate
  quality-gate:
    name: Quality Gate ‚úÖ
    runs-on: ubuntu-latest
    needs: [lint, test, e2e, build]
    if: always()
    steps:
      - name: Check all required jobs passed
        run: |
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "‚ùå Linting failed"
            exit 1
          fi
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "‚ùå Unit tests failed"
            exit 1
          fi
          if [[ "${{ needs.e2e.result }}" != "success" ]]; then
            echo "‚ùå E2E tests failed"
            exit 1
          fi
          if [[ "${{ needs.build.result }}" != "success" ]]; then
            echo "‚ùå Build failed"
            exit 1
          fi
          echo "‚úÖ All quality checks passed!"


